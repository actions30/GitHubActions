name: Member Join Tracker

on:
  # schedule:
  #   - cron: '*/15 * * * *'  # Every 15 minutes
  workflow_dispatch:        # Manual trigger option

jobs:
  track-member:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install jq
        run: sudo apt-get install jq

      - name: Print raw audit log API response
        run: |
               curl -s -H "Authorization: token $TOKEN" \
               "https://api.github.com/orgs/$ORG_NAME/audit-log?include=web&per_page=10&phrase=action:add_member"


    #   - name: Check recent org.add_member events
    #     env:
    #       GH_TOKEN: ${{ secrets.TOKEN}}
    #       ORG_NAME: actions30
    #       REPO_NAME: actions30/GitHubActions
    #     run: |
    #       echo "Fetching Audit Logs..."

    #       response=$(curl -s -H "Authorization: token $GH_TOKEN" \
    #         "https://api.github.com/orgs/$ORG_NAME/audit-log?include=web&per_page=10&phrase=action:add_member")

    #       echo "$response" | jq '.[] | {login: .actor, time: .created_at}' > members.json
    #       echo "$response" | jq '.[] | {login: .actor, time: .created_at}'


    #       echo "Checking new members..."
    #       cat members.json

    #       # Get last known login from previous run
    #       if [ -f last_member.txt ]; then
    #         last_known=$(cat last_member.txt)
    #       else
    #         last_known=""
    #       fi

    #       # Extract the newest login
    #       newest_login=$(jq -r '.[0].login' members.json)

    #       if [ "$newest_login" != "$last_known" ]; then
    #         echo "New member detected: $newest_login"

    #         # Save for next comparison
    #         echo "$newest_login" > last_member.txt

    #         echo "Creating issue..."
    #         issue_title="New Member Joined: $newest_login"
    #         issue_body=" A new member **$newest_login** has joined the organization at $(date -u)."

    #         curl -s -X POST -H "Authorization: token $GH_TOKEN" \
    #           -H "Accept: application/vnd.github+json" \
    #           https://api.github.com/repos/$REPO_NAME/issues \
    #           -d "$(jq -n \
    #             --arg title "$issue_title" \
    #             --arg body "$issue_body" \
    #             '{title: $title, body: $body}')"

    #       else
    #         echo "No new member since last check."
    #       fi
